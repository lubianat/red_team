DF.long %<>%
select(# subject-level variables
exper_init_var, exper_ssid_var, demand,
feedb_awar_var, feedb_blef_var, video_awar_var,
heard_awar_var,
# block variables
block.num,
# trial-level variables
trial, anger, happy,
hap, sat, enj,
agg, irr, ann, dif)
# Chunk 19
rm(DF)
# Chunk 21
DF.wide$indiv_gend_var <- as.factor(DF.wide$indiv_gend_var)
# calculate proportion of women and men
DF.wide %>%
group_by(indiv_gend_var) %>%
summarise(no_rows = length(indiv_gend_var))
# calculate age descriptives
DF.wide %>%
summarise(mean = mean(indiv_agee_var),
sd = sd(indiv_agee_var))
# Chunk 22
emo.hist <- list()
for (emo in c("hap", "sat", "enj")){
emo.hist[[emo]] <-
ggplot(DF.long,
aes_string(x = emo,
fill = "trial")) +
geom_histogram(binwidth = 1,
alpha= .6,
position= "identity") +
ylim(0, 500) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
}
# grid.arrange
grid.arrange(emo.hist$hap, emo.hist$sat, emo.hist$enj,
top = "Individual happiness item reports after each trial")
# delete vestigial
rm(emo, emo.hist)
# Chunk 23
emo.hist <- list()
for (emo in c("agg", "ann", "irr")){
emo.hist[[emo]] <-
ggplot(DF.long,
aes_string(x = emo,
fill = "trial")) +
geom_histogram(binwidth = 1,
alpha= .6,
position= "identity") +
ylim(0, 500) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
}
# grid.arrange
grid.arrange(emo.hist$agg, emo.hist$ann, emo.hist$irr,
top = "Individual anger item reports reports after each trial")
# delete vestigial
rm(emo, emo.hist)
# Chunk 24
# create a blank dataframe to paste results in
alpha.DF <- data.frame(block.num = factor(),
trial = factor(),
alpha.h = numeric(),
alpha.a = numeric())
# loop through each trial and block and calculate alpha for the happiness and anger scores
for (trial in unique(DF.long$trial)){
for (block.num in unique(DF.long$block.num)) {
# happy items alpha
alpha.h <-
DF.long[DF.long$trial == trial &
DF.long$block.num == block.num, ] %>%
select(hap, sat, enj) %>%
alpha()
# anger items alpha
alpha.a <-
DF.long[DF.long$trial == trial &
DF.long$block.num == block.num, ] %>%
select(agg, irr, ann) %>%
alpha()
# save results to dataframe
alpha.DF <- rbind(alpha.DF,
cbind(block.num = block.num,
trial = trial,
alpha.h = alpha.h[["total"]][["raw_alpha"]],
alpha.a = alpha.a[["total"]][["raw_alpha"]]
)
)
}
}
# View reliability for every trial and block combination
## View(alpha.DF)
# calculate reliability for happiness and anger items overall
alpha.DF %>%
mutate(alpha.h = as.numeric(as.character(alpha.h)),
alpha.a = as.numeric(as.character(alpha.a))
) %>%
summarise(alpha.h.avg = mean(alpha.h),
alpha.a.avg = mean(alpha.a))
# delete vestigial
rm(alpha.a, alpha.DF, alpha.h, block.num, trial)
# Chunk 25
# happy items (alpha = .92)
DF.long %>%
select(hap, sat, enj) %>%
alpha()
# anger items (alpha = .89)
DF.long %>%
select(agg, irr, ann) %>%
alpha()
# delete individual emotion items
DF.long %<>%
select(-c(hap : ann))
# Chunk 26
ggplot(DF.long, aes(x = happy, fill = trial)) +
geom_density(alpha = .6,
adjust = 3) +
labs(title = "Happy reports after each pose") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Chunk 27
ggplot(DF.long, aes(x = anger, fill = trial)) +
geom_density(alpha = .6,
adjust = 10) +
labs(title = "Anger reports after each pose") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Chunk 28
ggplot(DF.long, aes(x = feedb_awar_var, fill = demand)) +
geom_density(alpha = .6,
adjust = 1.5) +
labs(title = "Awareness of our interest in the ffh in each condition") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Chunk 29
# ANOVA
awar.aov <- aov(feedb_awar_var ~ demand,
data = DF.wide)
summary(awar.aov)
# pairwise comparisons with unadjusted p-values
emmeans(awar.aov, pairwise ~ demand,
infer = c(TRUE, TRUE),
adjust = "none")
# raw group Ms and SDs
DF.long %>%
group_by(demand) %>%
summarise(mean = mean(feedb_awar_var),
sd = sd(feedb_awar_var))
rm(awar.aov)
# Chunk 30
ggplot(DF.long, aes(x = feedb_blef_var, fill = demand)) +
geom_density(alpha = .6,
adjust = 1.5) +
labs(title = "Belief in the ffh in each condition") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
# Chunk 31
# ANOVA
blef.aov <- aov(feedb_blef_var ~ demand,
data = DF.wide)
summary(blef.aov)
# pairwise comparisons with unadjusted p-values
emmeans(blef.aov, pairwise ~ demand,
infer = c(TRUE, TRUE),
adjust = "none")
# raw group Ms and SDs
DF.long %>%
group_by(demand) %>%
summarise(mean = mean(feedb_blef_var,
na.rm = TRUE),
sd = sd(feedb_blef_var,
na.rm = TRUE))
rm(blef.aov)
# Chunk 32
DF.long$exper_ssid_var <- as.factor(DF.long$exper_ssid_var)
DF.long$block.num <- as.factor(DF.long$block.num)
# Chunk 33
h.lmer.full <- lmer(happy ~ trial * demand * block.num +
(1 | exper_ssid_var),
data = DF.long)
summary(h.lmer.full)
anova(h.lmer.full)
# Chunk 34
# trial
lsmeansLT(h.lmer.full, which =  "trial", pairwise = TRUE)
DF.long %>%
group_by(trial) %>%
summarise(mean = mean(happy),
sd = sd(happy))
# demand
lsmeansLT(h.lmer.full, which =  "demand", pairwise = TRUE)
DF.long %>%
group_by(demand) %>%
summarise(mean = mean(happy),
sd = sd(happy))
# block.num
lsmeansLT(h.lmer.full, which =  "block.num", pairwise = TRUE)
DF.long %>%
group_by(block.num) %>%
summarise(mean = mean(happy),
sd = sd(happy))
# Chunk 35
joint_tests(h.lmer.full, by = "demand")
emmeans(h.lmer.full, pairwise ~ trial | demand,
infer = c(TRUE, TRUE),
adjust = "none")
DF.long %>%
group_by(demand, trial) %>%
summarise(mean = mean(happy),
sd = sd(happy))
# Chunk 36
joint_tests(h.lmer.full, by = "block.num")
# Chunk 37
rm(h.lmer.full)
# Chunk 38
a.lmer.full <- lmer(anger ~ trial * demand * block.num +
(1 | exper_ssid_var),
data = DF.long)
summary(a.lmer.full)
anova(a.lmer.full)
# Chunk 39
# trail effects
lsmeansLT(a.lmer.full, which =  "trial", pairwise = TRUE)
DF.long %>%
group_by(trial) %>%
summarise(mean = mean(anger),
sd = sd(anger))
# demand effects
lsmeansLT(a.lmer.full, which =  "demand", pairwise = TRUE)
DF.long %>%
group_by(demand) %>%
summarise(mean = mean(anger),
sd = sd(anger))
# block number effects
lsmeansLT(a.lmer.full, which =  "block.num", pairwise = TRUE)
DF.long %>%
group_by(block.num) %>%
summarise(mean = mean(anger),
sd = sd(anger))
# Chunk 40
joint_tests(a.lmer.full, by = "demand")
emmeans(a.lmer.full, pairwise ~ trial | demand,
infer = c(TRUE, TRUE),
adjust = "none")
DF.long %>%
group_by(demand, trial) %>%
summarise(mean = mean(anger),
sd = sd(anger))
# Chunk 41
rm(a.lmer.full)
# Chunk 42
# create a matrix of summary statistics
## happy self-reports
smry.h <- DF.long %>%
group_by(demand, trial) %>%
summarise(mean = mean(happy),
sd = sd(happy),
n_obs = n(),
se = sd(happy)/sqrt(n())
)
## anger self-reports
smry.a <- DF.long %>%
group_by(demand, trial) %>%
summarise(mean = mean(anger),
sd = sd(anger),
n_obs = n(),
se = sd(anger)/sqrt(n())
)
## combine matrices
smry <- rbind(cbind(dv = rep("Self-reported happiness", 9),
smry.h),
cbind(dv = rep("Self-reported anger", 9),
smry.a)
)
rm(smry.a, smry.h)
## re-order and re-name facets
smry$dv <- factor(smry$dv,
levels = c("Self-reported happiness",
"Self-reported anger"))
smry$trial <- factor(smry$trial,
levels = c("happ", "neut","angr"))
levels(smry$trial)[levels(smry$trial)=="happ"] <- "happy"
levels(smry$trial)[levels(smry$trial)=="neut"] <- "neutral"
levels(smry$trial)[levels(smry$trial)=="angr"] <- "angry"
smry$demand <- factor(smry$demand,
levels = c("pos", "neu","neg"))
levels(smry$demand)[levels(smry$demand)=="pos"] <-
"positive expectation"
levels(smry$demand)[levels(smry$demand)=="neu"] <-
"control"
levels(smry$demand)[levels(smry$demand)=="neg"] <-
"null expectation"
# plot
ggplot(smry, aes(trial, mean)) +
facet_grid(dv ~ demand, switch = "y",
scales = "free_x") +
geom_col(width = .80, fill = "grey69", colour = "black") +
geom_errorbar(aes(ymin = mean - se,
ymax = mean + se,
width = 0.2)) +
labs(y = NULL, x = "Facial expression pose") +
ylim(0, 2) +
theme_classic() +
theme(strip.placement = "outside",
strip.background.y = element_blank(),
#strip.background.x = element_blank(),
#strip.background.x = element_rect(colour = "black",
#                                  fill = "white"),
strip.text.y = element_text(size = 10),
axis.title.x.bottom = element_text(size = 10))
rm(smry)
# Chunk 43
d.lmer.full <- lmer(dif ~ trial * demand * block.num +
(1 | exper_ssid_var),
data = DF.long)
summary(d.lmer.full)
anova(d.lmer.full)
# decompose trial effect
lsmeansLT(d.lmer.full, which =  "trial", pairwise = TRUE)
DF.long %>%
group_by(trial) %>%
summarise(mean = mean(dif),
sd = sd(dif))
# decompose demand effect
lsmeansLT(d.lmer.full, which =  "demand", pairwise = TRUE)
DF.long %>%
group_by(demand) %>%
summarise(mean = mean(dif),
sd = sd(dif))
# Chunk 44
rm(d.lmer.full)
# Chunk 45
h.d.lmer.full <- lmer(happy ~ (dif + trial + demand + block.num
+ trial:demand) + (1 | exper_ssid_var),
data = DF.long)
summary(h.d.lmer.full)
anova(h.d.lmer.full)
# Chunk 46
joint_tests(h.d.lmer.full, by = "demand")
emmeans(h.d.lmer.full, pairwise ~ trial | demand,
infer = c(TRUE, TRUE),
adjust = "none")
# Chunk 47
rm(h.d.lmer.full)
# Chunk 48
a.d.lmer.full <- lmer(anger ~ (dif + trial + demand + block.num
+ trial:demand) + (1 | exper_ssid_var),
data = DF.long)
summary(a.d.lmer.full)
anova(a.d.lmer.full)
# Chunk 49
joint_tests(a.d.lmer.full, by = "demand")
emmeans(a.d.lmer.full, pairwise ~ trial | demand,
infer = c(TRUE, TRUE),
adjust = "none")
# Chunk 50
rm(a.d.lmer.full)
# Chunk 51
b.h.lmer <- lmer(happy ~ (trial + feedb_blef_var + block.num
+ trial:feedb_blef_var) + (1 | exper_ssid_var),
data = DF.long)
summary(b.h.lmer)
anova(b.h.lmer)
b.a.lmer <- lmer(anger ~ (trial + feedb_blef_var + block.num
+ trial:feedb_blef_var) + (1 | exper_ssid_var),
data = DF.long)
summary(b.a.lmer)
anova(b.a.lmer)
rm(b.h.lmer, b.a.lmer)
# Chunk 52
DF.long %<>%
mutate(feedb_blef_nom = if_else(condition = feedb_blef_var > 2.15,
true = "high",
false = "low",
missing = NULL),
feedb_blef_nom = as.factor(feedb_blef_nom))
# Chunk 53
b.h.lmer <- lmer(happy ~ (trial + feedb_blef_nom + block.num
+ trial:feedb_blef_nom) + (1 | exper_ssid_var),
data = DF.long)
summary(b.h.lmer)
anova(b.h.lmer)
# decompose trial by belief interaction
joint_tests(b.h.lmer, by = "feedb_blef_nom")
# delete vestigial
rm(b.h.lmer)
# Chunk 54
b.a.lmer <- lmer(anger ~ (trial + feedb_blef_nom + block.num
+ trial:feedb_blef_nom) + (1 | exper_ssid_var),
data = DF.long)
summary(b.a.lmer)
anova(b.a.lmer)
# decompose trial by belief interaction
joint_tests(b.a.lmer, by = "feedb_blef_nom")
# delete vestigial
rm(b.a.lmer)
# Chunk 55
DF.w.es <- DF.wide
# Chunk 56
DF.w.es <- DF.w.es %>%
rowwise() %>%
mutate(# happy trial ratings
happ.happy = mean(c(happ1.happy,
happ2.happy)),
happ.anger = mean(c(happ1.anger,
happ2.anger)),
# angry trial ratings
angr.happy = mean(c(angr1.happy,
angr2.happy)),
angr.anger = mean(c(angr1.anger,
angr2.anger)),
# neutral trial ratings
neut.happy = mean(c(neut1.happy,
neut2.happy)),
neut.anger = mean(c(neut1.anger,
neut2.anger))
) %>%
ungroup() %>%
# delete vestigial
select(-c(happ1.happy : neut2.anger))
# Chunk 57
DF.w.es <- DF.w.es %>%
rowwise() %>%
mutate(# happiness scores for non-target trials (angr and neut)
angrneut.happy = mean(c(angr.happy, neut.happy)),
# anger scores for non-target trials (happ and neut)
happneut.anger = mean(c(happ.anger, neut.anger))
) %>%
ungroup() %>%
# delete vestigial
select(-c(angr.happy, neut.happy, happ.anger, neut.anger))
# Chunk 58
tmp <- DF.w.es %>%
pivot_longer(cols = c(happ.happy, angrneut.happy),
names_to = "group",
values_to = "happiness") %>%
select(exper_ssid_var, demand, group, happiness)
tmp.dp <- tmp %>%
filter(demand == "pos")
cohen.d(formula = happiness ~ group | Subject(exper_ssid_var),
data = tmp.dp,
paired = TRUE,
within = TRUE)
rm(tmp, tmp.dp)
# Chunk 60
# formula: Cooper, Hedges, & Valentine, 2009; p. 229
EsWitnMeanDiff <- function(m.diff, sd.diff, corr){
es <- (m.diff / sd.diff) * sqrt(2 * (1- corr));
return(es)
}
# Chunk 61
DF.w.pos.es <- DF.w.es %>%
filter(demand == "pos")
# d = 1.19
EsWitnMeanDiff(m.diff = mean(DF.w.pos.es$happy.diff),
sd.diff = sd(DF.w.pos.es$happy.diff),
corr = cor(DF.w.pos.es$happ.happy,
DF.w.pos.es$angrneut.happy)
)
rm(DF.w.pos.es)
# Chunk 62
DF.w.neu.es <- DF.w.es %>%
filter(demand == "neu")
# d = 0.92
EsWitnMeanDiff(m.diff = mean(DF.w.neu.es$happy.diff),
sd.diff = sd(DF.w.neu.es$happy.diff),
corr = cor(DF.w.neu.es$happ.happy,
DF.w.neu.es$angrneut.happy)
)
rm(DF.w.neu.es)
# Chunk 63
DF.w.neg.es <- DF.w.es %>%
filter(demand == "neg")
# d = 0.51
EsWitnMeanDiff(m.diff = mean(DF.w.neg.es$happy.diff),
sd.diff = sd(DF.w.neg.es$happy.diff),
corr = cor(DF.w.neg.es$happ.happy,
DF.w.neg.es$angrneut.happy)
)
rm(DF.w.neg.es)
# Chunk 64
DF.w.pos.es <- DF.w.es %>%
filter(demand == "pos")
# d = 0.75
EsWitnMeanDiff(m.diff = mean(DF.w.pos.es$anger.diff),
sd.diff = sd(DF.w.pos.es$anger.diff),
corr = cor(DF.w.pos.es$angr.anger,
DF.w.pos.es$happneut.anger)
)
rm(DF.w.pos.es)
# Chunk 65
DF.w.neu.es <- DF.w.es %>%
filter(demand == "neu")
# d = 0.69
EsWitnMeanDiff(m.diff = mean(DF.w.neu.es$anger.diff),
sd.diff = sd(DF.w.neu.es$anger.diff),
corr = cor(DF.w.neu.es$angr.anger,
DF.w.neu.es$happneut.anger)
)
rm(DF.w.neu.es)
# Chunk 66
DF.w.neg.es <- DF.w.es %>%
filter(demand == "neg")
# d = 0.34
EsWitnMeanDiff(m.diff = mean(DF.w.neg.es$anger.diff),
sd.diff = sd(DF.w.neg.es$anger.diff),
corr = cor(DF.w.neg.es$angr.anger,
DF.w.neg.es$happneut.anger)
)
rm(DF.w.neg.es, EsWitnMeanDiff)
